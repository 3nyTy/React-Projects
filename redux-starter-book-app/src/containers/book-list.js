import React, { Component } from 'react';
import { connect } from 'react-redux';
import { selectBook } from '../actions/index';
import { bindActionCreators } from 'redux'; //makes sure action generated by ACTION GENERATOR will flow through all different reducers.

class BookList extends Component {
  renderList() {
    return this.props.books.map((book)=>{
        return (
          
          <li key = {book.title}
          onClick = {() => this.props.selectBook(book)} 
          className = "list-group-item">{book.title}</li>
        );
    });
  }

  render () {
    return (
      <ul className = "list-group col-sm-4">
      {this.renderList()}
      </ul>
    )
  }

}

function mapStateToProps(state) { // purpose is to take application state as argument.
//whatever returned from here will be props inside of booklist
return {
  books : state.books
};

}

//Anything returned from this will end up a props
//on BookList Container
function mapDispatchToProps(dispatch) {
  //Whenever  selectBook is called the result has to be passed
  //to all the reducers
  return bindActionCreators({ selectBook : selectBook}, dispatch); 
}

//Promote Booklist from component to a container - it needs to know about dispatch method, selectBook.
//Make it avialabe as a prop.
export default connect(mapStateToProps, mapDispatchToProps)(BookList); 
// this one connects BookList and mapStateToProps fucntion to create a container.
//connect takes a function and a component to produce a container
